package tieto.bank;

import tieto.bank.admin.Account;
import tieto.bank.admin.AccountType;
import tieto.bank.state.CorporateState;
import tieto.bank.state.DefaultState;
import tieto.bank.state.PrivateState;
import tieto.bank.state.Stateholder;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.TextField;

public class AccountDataForm extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button button_1;
	@AutoGenerated
	private Button Remove;
	@AutoGenerated
	private TextField textField_1;
	@AutoGenerated
	private GridLayout gridLayout_2;
	@AutoGenerated
	private TextField textField_2;
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	
	Stateholder stateholder;
	Account account;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public AccountDataForm() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		this.stateholder = new Stateolder(this, new DefaultState());

		// init components from account
		
		
	}
    public void setAccount(Account account)
    {
    	if(account !=null)
    	{
    		this.account=account;
    		if(AccountType.Private.equals(account.getType()))
    		  {
    			this.stateholder.setState(new PrivateState());
    		  }
    		else if(AccountType.Corporate.equals(account.getType()))
  		  {
  			this.stateholder.setState(new CorporateState());
  		  }
    	}
    	
    	
    }
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// gridLayout_2
		gridLayout_2 = buildGridLayout_2();
		mainLayout.addComponent(gridLayout_2, "top:128.0px;left:102.0px;");
		
		// textField_1
		textField_1 = new TextField();
		textField_1.setCaption("Accountballance");
		textField_1.setImmediate(false);
		textField_1.setWidth("-1px");
		textField_1.setHeight("-1px");
		textField_1.setSecret(false);
		mainLayout.addComponent(textField_1, "top:136.0px;left:405.0px;");
		
		// Remove
		Remove = new Button();
		Remove.setCaption("Remove");
		Remove.setImmediate(true);
		Remove.setWidth("-1px");
		Remove.setHeight("-1px");
		mainLayout.addComponent(Remove, "top:320.0px;left:145.0px;");
		
		// button_1
		button_1 = new Button();
		button_1.setCaption("Save");
		button_1.setImmediate(true);
		button_1.setWidth("-1px");
		button_1.setHeight("-1px");
		mainLayout.addComponent(button_1, "top:320.0px;left:500.0px;");
		
		return mainLayout;
	}
	@AutoGenerated
	private GridLayout buildGridLayout_2() {
		// common part: create layout
		gridLayout_2 = new GridLayout();
		gridLayout_2.setImmediate(false);
		gridLayout_2.setWidth("-1px");
		gridLayout_2.setHeight("32px");
		gridLayout_2.setMargin(false);
		gridLayout_2.setColumns(3);
		gridLayout_2.setRows(2);
		
		// textField_2
		textField_2 = new TextField();
		textField_2.setCaption("Account balance:");
		textField_2.setImmediate(false);
		textField_2.setWidth("-1px");
		textField_2.setHeight("-1px");
		textField_2.setSecret(false);
		gridLayout_2.addComponent(textField_2, 2, 1);
		
		return gridLayout_2;
	}

}
